// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ommx/v1/instance.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_ommx_2fv1_2finstance_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ommx_2fv1_2finstance_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "ommx/v1/constraint.pb.h"
#include "ommx/v1/decision_variables.pb.h"
#include "ommx/v1/function.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ommx_2fv1_2finstance_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ommx_2fv1_2finstance_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ommx_2fv1_2finstance_2eproto;
namespace ommx {
namespace v1 {
class Instance;
struct InstanceDefaultTypeInternal;
extern InstanceDefaultTypeInternal _Instance_default_instance_;
class Instance_Description;
struct Instance_DescriptionDefaultTypeInternal;
extern Instance_DescriptionDefaultTypeInternal _Instance_Description_default_instance_;
}  // namespace v1
}  // namespace ommx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ommx {
namespace v1 {
enum Instance_Sense : int {
  Instance_Sense_SENSE_UNSPECIFIED = 0,
  Instance_Sense_SENSE_MINIMIZE = 1,
  Instance_Sense_SENSE_MAXIMIZE = 2,
  Instance_Sense_Instance_Sense_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Instance_Sense_Instance_Sense_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Instance_Sense_IsValid(int value);
extern const uint32_t Instance_Sense_internal_data_[];
constexpr Instance_Sense Instance_Sense_Sense_MIN = static_cast<Instance_Sense>(0);
constexpr Instance_Sense Instance_Sense_Sense_MAX = static_cast<Instance_Sense>(2);
constexpr int Instance_Sense_Sense_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Instance_Sense_descriptor();
template <typename T>
const std::string& Instance_Sense_Name(T value) {
  static_assert(std::is_same<T, Instance_Sense>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Sense_Name().");
  return Instance_Sense_Name(static_cast<Instance_Sense>(value));
}
template <>
inline const std::string& Instance_Sense_Name(Instance_Sense value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Instance_Sense_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Instance_Sense_Parse(absl::string_view name, Instance_Sense* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Instance_Sense>(
      Instance_Sense_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Instance_Description final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ommx.v1.Instance.Description) */ {
 public:
  inline Instance_Description() : Instance_Description(nullptr) {}
  ~Instance_Description() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Instance_Description(
      ::google::protobuf::internal::ConstantInitialized);

  inline Instance_Description(const Instance_Description& from) : Instance_Description(nullptr, from) {}
  inline Instance_Description(Instance_Description&& from) noexcept
      : Instance_Description(nullptr, std::move(from)) {}
  inline Instance_Description& operator=(const Instance_Description& from) {
    CopyFrom(from);
    return *this;
  }
  inline Instance_Description& operator=(Instance_Description&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Instance_Description& default_instance() {
    return *internal_default_instance();
  }
  static inline const Instance_Description* internal_default_instance() {
    return reinterpret_cast<const Instance_Description*>(
        &_Instance_Description_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Instance_Description& a, Instance_Description& b) { a.Swap(&b); }
  inline void Swap(Instance_Description* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Instance_Description* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Instance_Description* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Instance_Description>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Instance_Description& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Instance_Description& from) { Instance_Description::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Instance_Description* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ommx.v1.Instance.Description"; }

 protected:
  explicit Instance_Description(::google::protobuf::Arena* arena);
  Instance_Description(::google::protobuf::Arena* arena, const Instance_Description& from);
  Instance_Description(::google::protobuf::Arena* arena, Instance_Description&& from) noexcept
      : Instance_Description(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorsFieldNumber = 3,
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kCreatedByFieldNumber = 4,
  };
  // repeated string authors = 3 [json_name = "authors"];
  int authors_size() const;
  private:
  int _internal_authors_size() const;

  public:
  void clear_authors() ;
  const std::string& authors(int index) const;
  std::string* mutable_authors(int index);
  void set_authors(int index, const std::string& value);
  void set_authors(int index, std::string&& value);
  void set_authors(int index, const char* value);
  void set_authors(int index, const char* value, std::size_t size);
  void set_authors(int index, absl::string_view value);
  std::string* add_authors();
  void add_authors(const std::string& value);
  void add_authors(std::string&& value);
  void add_authors(const char* value);
  void add_authors(const char* value, std::size_t size);
  void add_authors(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& authors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_authors();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_authors() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_authors();

  public:
  // optional string name = 1 [json_name = "name"];
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string description = 2 [json_name = "description"];
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // optional string created_by = 4 [json_name = "createdBy"];
  bool has_created_by() const;
  void clear_created_by() ;
  const std::string& created_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_by(Arg_&& arg, Args_... args);
  std::string* mutable_created_by();
  PROTOBUF_NODISCARD std::string* release_created_by();
  void set_allocated_created_by(std::string* value);

  private:
  const std::string& _internal_created_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_by(
      const std::string& value);
  std::string* _internal_mutable_created_by();

  public:
  // @@protoc_insertion_point(class_scope:ommx.v1.Instance.Description)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      69, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Instance_Description_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Instance_Description& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> authors_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr created_by_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ommx_2fv1_2finstance_2eproto;
};
// -------------------------------------------------------------------

class Instance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ommx.v1.Instance) */ {
 public:
  inline Instance() : Instance(nullptr) {}
  ~Instance() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Instance(
      ::google::protobuf::internal::ConstantInitialized);

  inline Instance(const Instance& from) : Instance(nullptr, from) {}
  inline Instance(Instance&& from) noexcept
      : Instance(nullptr, std::move(from)) {}
  inline Instance& operator=(const Instance& from) {
    CopyFrom(from);
    return *this;
  }
  inline Instance& operator=(Instance&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Instance& default_instance() {
    return *internal_default_instance();
  }
  static inline const Instance* internal_default_instance() {
    return reinterpret_cast<const Instance*>(
        &_Instance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Instance& a, Instance& b) { a.Swap(&b); }
  inline void Swap(Instance* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Instance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Instance* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Instance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Instance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Instance& from) { Instance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Instance* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "ommx.v1.Instance"; }

 protected:
  explicit Instance(::google::protobuf::Arena* arena);
  Instance(::google::protobuf::Arena* arena, const Instance& from);
  Instance(::google::protobuf::Arena* arena, Instance&& from) noexcept
      : Instance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Description = Instance_Description;
  using Sense = Instance_Sense;
  static constexpr Sense SENSE_UNSPECIFIED = Instance_Sense_SENSE_UNSPECIFIED;
  static constexpr Sense SENSE_MINIMIZE = Instance_Sense_SENSE_MINIMIZE;
  static constexpr Sense SENSE_MAXIMIZE = Instance_Sense_SENSE_MAXIMIZE;
  static inline bool Sense_IsValid(int value) {
    return Instance_Sense_IsValid(value);
  }
  static constexpr Sense Sense_MIN = Instance_Sense_Sense_MIN;
  static constexpr Sense Sense_MAX = Instance_Sense_Sense_MAX;
  static constexpr int Sense_ARRAYSIZE = Instance_Sense_Sense_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Sense_descriptor() {
    return Instance_Sense_descriptor();
  }
  template <typename T>
  static inline const std::string& Sense_Name(T value) {
    return Instance_Sense_Name(value);
  }
  static inline bool Sense_Parse(absl::string_view name, Sense* value) {
    return Instance_Sense_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kDecisionVariablesFieldNumber = 2,
    kConstraintsFieldNumber = 4,
    kDescriptionFieldNumber = 1,
    kObjectiveFieldNumber = 3,
    kSenseFieldNumber = 5,
  };
  // repeated .ommx.v1.DecisionVariable decision_variables = 2 [json_name = "decisionVariables"];
  int decision_variables_size() const;
  private:
  int _internal_decision_variables_size() const;

  public:
  void clear_decision_variables() ;
  ::ommx::v1::DecisionVariable* mutable_decision_variables(int index);
  ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>* mutable_decision_variables();

  private:
  const ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>& _internal_decision_variables() const;
  ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>* _internal_mutable_decision_variables();
  public:
  const ::ommx::v1::DecisionVariable& decision_variables(int index) const;
  ::ommx::v1::DecisionVariable* add_decision_variables();
  const ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>& decision_variables() const;
  // repeated .ommx.v1.Constraint constraints = 4 [json_name = "constraints"];
  int constraints_size() const;
  private:
  int _internal_constraints_size() const;

  public:
  void clear_constraints() ;
  ::ommx::v1::Constraint* mutable_constraints(int index);
  ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>* mutable_constraints();

  private:
  const ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>& _internal_constraints() const;
  ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>* _internal_mutable_constraints();
  public:
  const ::ommx::v1::Constraint& constraints(int index) const;
  ::ommx::v1::Constraint* add_constraints();
  const ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>& constraints() const;
  // .ommx.v1.Instance.Description description = 1 [json_name = "description"];
  bool has_description() const;
  void clear_description() ;
  const ::ommx::v1::Instance_Description& description() const;
  PROTOBUF_NODISCARD ::ommx::v1::Instance_Description* release_description();
  ::ommx::v1::Instance_Description* mutable_description();
  void set_allocated_description(::ommx::v1::Instance_Description* value);
  void unsafe_arena_set_allocated_description(::ommx::v1::Instance_Description* value);
  ::ommx::v1::Instance_Description* unsafe_arena_release_description();

  private:
  const ::ommx::v1::Instance_Description& _internal_description() const;
  ::ommx::v1::Instance_Description* _internal_mutable_description();

  public:
  // .ommx.v1.Function objective = 3 [json_name = "objective"];
  bool has_objective() const;
  void clear_objective() ;
  const ::ommx::v1::Function& objective() const;
  PROTOBUF_NODISCARD ::ommx::v1::Function* release_objective();
  ::ommx::v1::Function* mutable_objective();
  void set_allocated_objective(::ommx::v1::Function* value);
  void unsafe_arena_set_allocated_objective(::ommx::v1::Function* value);
  ::ommx::v1::Function* unsafe_arena_release_objective();

  private:
  const ::ommx::v1::Function& _internal_objective() const;
  ::ommx::v1::Function* _internal_mutable_objective();

  public:
  // .ommx.v1.Instance.Sense sense = 5 [json_name = "sense"];
  void clear_sense() ;
  ::ommx::v1::Instance_Sense sense() const;
  void set_sense(::ommx::v1::Instance_Sense value);

  private:
  ::ommx::v1::Instance_Sense _internal_sense() const;
  void _internal_set_sense(::ommx::v1::Instance_Sense value);

  public:
  // @@protoc_insertion_point(class_scope:ommx.v1.Instance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Instance_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Instance& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ommx::v1::DecisionVariable > decision_variables_;
    ::google::protobuf::RepeatedPtrField< ::ommx::v1::Constraint > constraints_;
    ::ommx::v1::Instance_Description* description_;
    ::ommx::v1::Function* objective_;
    int sense_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ommx_2fv1_2finstance_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Instance_Description

// optional string name = 1 [json_name = "name"];
inline bool Instance_Description::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Instance_Description::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Instance_Description::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.Description.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Instance_Description::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ommx.v1.Instance.Description.name)
}
inline std::string* Instance_Description::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.Description.name)
  return _s;
}
inline const std::string& Instance_Description::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Instance_Description::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Instance_Description::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Instance_Description::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ommx.v1.Instance.Description.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Instance_Description::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Instance.Description.name)
}

// optional string description = 2 [json_name = "description"];
inline bool Instance_Description::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Instance_Description::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Instance_Description::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.Description.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Instance_Description::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ommx.v1.Instance.Description.description)
}
inline std::string* Instance_Description::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.Description.description)
  return _s;
}
inline const std::string& Instance_Description::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Instance_Description::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Instance_Description::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Instance_Description::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ommx.v1.Instance.Description.description)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.description_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Instance_Description::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Instance.Description.description)
}

// repeated string authors = 3 [json_name = "authors"];
inline int Instance_Description::_internal_authors_size() const {
  return _internal_authors().size();
}
inline int Instance_Description::authors_size() const {
  return _internal_authors_size();
}
inline void Instance_Description::clear_authors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authors_.Clear();
}
inline std::string* Instance_Description::add_authors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_authors()->Add();
  // @@protoc_insertion_point(field_add_mutable:ommx.v1.Instance.Description.authors)
  return _s;
}
inline const std::string& Instance_Description::authors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.Description.authors)
  return _internal_authors().Get(index);
}
inline std::string* Instance_Description::mutable_authors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.Description.authors)
  return _internal_mutable_authors()->Mutable(index);
}
inline void Instance_Description::set_authors(int index, const std::string& value) {
  _internal_mutable_authors()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::set_authors(int index, std::string&& value) {
  _internal_mutable_authors()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::set_authors(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_authors()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::set_authors(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_authors()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::set_authors(int index, absl::string_view value) {
  _internal_mutable_authors()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::add_authors(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_authors()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::add_authors(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_authors()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::add_authors(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_authors()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::add_authors(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_authors()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ommx.v1.Instance.Description.authors)
}
inline void Instance_Description::add_authors(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_authors()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:ommx.v1.Instance.Description.authors)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Instance_Description::authors() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ommx.v1.Instance.Description.authors)
  return _internal_authors();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Instance_Description::mutable_authors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ommx.v1.Instance.Description.authors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_authors();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Instance_Description::_internal_authors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authors_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Instance_Description::_internal_mutable_authors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.authors_;
}

// optional string created_by = 4 [json_name = "createdBy"];
inline bool Instance_Description::has_created_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Instance_Description::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Instance_Description::created_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.Description.created_by)
  return _internal_created_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Instance_Description::set_created_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ommx.v1.Instance.Description.created_by)
}
inline std::string* Instance_Description::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.Description.created_by)
  return _s;
}
inline const std::string& Instance_Description::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_.Get();
}
inline void Instance_Description::_internal_set_created_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.created_by_.Set(value, GetArena());
}
inline std::string* Instance_Description::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.created_by_.Mutable( GetArena());
}
inline std::string* Instance_Description::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ommx.v1.Instance.Description.created_by)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.created_by_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.created_by_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Instance_Description::set_allocated_created_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.created_by_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.created_by_.IsDefault()) {
          _impl_.created_by_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Instance.Description.created_by)
}

// -------------------------------------------------------------------

// Instance

// .ommx.v1.Instance.Description description = 1 [json_name = "description"];
inline bool Instance::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.description_ != nullptr);
  return value;
}
inline void Instance::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.description_ != nullptr) _impl_.description_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ommx::v1::Instance_Description& Instance::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ommx::v1::Instance_Description* p = _impl_.description_;
  return p != nullptr ? *p : reinterpret_cast<const ::ommx::v1::Instance_Description&>(::ommx::v1::_Instance_Description_default_instance_);
}
inline const ::ommx::v1::Instance_Description& Instance::description() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.description)
  return _internal_description();
}
inline void Instance::unsafe_arena_set_allocated_description(::ommx::v1::Instance_Description* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }
  _impl_.description_ = reinterpret_cast<::ommx::v1::Instance_Description*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ommx.v1.Instance.description)
}
inline ::ommx::v1::Instance_Description* Instance::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ommx::v1::Instance_Description* released = _impl_.description_;
  _impl_.description_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ommx::v1::Instance_Description* Instance::unsafe_arena_release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ommx.v1.Instance.description)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ommx::v1::Instance_Description* temp = _impl_.description_;
  _impl_.description_ = nullptr;
  return temp;
}
inline ::ommx::v1::Instance_Description* Instance::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.description_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ommx::v1::Instance_Description>(GetArena());
    _impl_.description_ = reinterpret_cast<::ommx::v1::Instance_Description*>(p);
  }
  return _impl_.description_;
}
inline ::ommx::v1::Instance_Description* Instance::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ommx::v1::Instance_Description* _msg = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.description)
  return _msg;
}
inline void Instance::set_allocated_description(::ommx::v1::Instance_Description* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.description_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.description_ = reinterpret_cast<::ommx::v1::Instance_Description*>(value);
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Instance.description)
}

// repeated .ommx.v1.DecisionVariable decision_variables = 2 [json_name = "decisionVariables"];
inline int Instance::_internal_decision_variables_size() const {
  return _internal_decision_variables().size();
}
inline int Instance::decision_variables_size() const {
  return _internal_decision_variables_size();
}
inline ::ommx::v1::DecisionVariable* Instance::mutable_decision_variables(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.decision_variables)
  return _internal_mutable_decision_variables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>* Instance::mutable_decision_variables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ommx.v1.Instance.decision_variables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_decision_variables();
}
inline const ::ommx::v1::DecisionVariable& Instance::decision_variables(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.decision_variables)
  return _internal_decision_variables().Get(index);
}
inline ::ommx::v1::DecisionVariable* Instance::add_decision_variables() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ommx::v1::DecisionVariable* _add = _internal_mutable_decision_variables()->Add();
  // @@protoc_insertion_point(field_add:ommx.v1.Instance.decision_variables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>& Instance::decision_variables() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ommx.v1.Instance.decision_variables)
  return _internal_decision_variables();
}
inline const ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>&
Instance::_internal_decision_variables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decision_variables_;
}
inline ::google::protobuf::RepeatedPtrField<::ommx::v1::DecisionVariable>*
Instance::_internal_mutable_decision_variables() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.decision_variables_;
}

// .ommx.v1.Function objective = 3 [json_name = "objective"];
inline bool Instance::has_objective() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.objective_ != nullptr);
  return value;
}
inline const ::ommx::v1::Function& Instance::_internal_objective() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ommx::v1::Function* p = _impl_.objective_;
  return p != nullptr ? *p : reinterpret_cast<const ::ommx::v1::Function&>(::ommx::v1::_Function_default_instance_);
}
inline const ::ommx::v1::Function& Instance::objective() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.objective)
  return _internal_objective();
}
inline void Instance::unsafe_arena_set_allocated_objective(::ommx::v1::Function* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.objective_);
  }
  _impl_.objective_ = reinterpret_cast<::ommx::v1::Function*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ommx.v1.Instance.objective)
}
inline ::ommx::v1::Function* Instance::release_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ommx::v1::Function* released = _impl_.objective_;
  _impl_.objective_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ommx::v1::Function* Instance::unsafe_arena_release_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ommx.v1.Instance.objective)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ommx::v1::Function* temp = _impl_.objective_;
  _impl_.objective_ = nullptr;
  return temp;
}
inline ::ommx::v1::Function* Instance::_internal_mutable_objective() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.objective_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ommx::v1::Function>(GetArena());
    _impl_.objective_ = reinterpret_cast<::ommx::v1::Function*>(p);
  }
  return _impl_.objective_;
}
inline ::ommx::v1::Function* Instance::mutable_objective() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ommx::v1::Function* _msg = _internal_mutable_objective();
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.objective)
  return _msg;
}
inline void Instance::set_allocated_objective(::ommx::v1::Function* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.objective_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.objective_ = reinterpret_cast<::ommx::v1::Function*>(value);
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Instance.objective)
}

// repeated .ommx.v1.Constraint constraints = 4 [json_name = "constraints"];
inline int Instance::_internal_constraints_size() const {
  return _internal_constraints().size();
}
inline int Instance::constraints_size() const {
  return _internal_constraints_size();
}
inline ::ommx::v1::Constraint* Instance::mutable_constraints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ommx.v1.Instance.constraints)
  return _internal_mutable_constraints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>* Instance::mutable_constraints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ommx.v1.Instance.constraints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_constraints();
}
inline const ::ommx::v1::Constraint& Instance::constraints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.constraints)
  return _internal_constraints().Get(index);
}
inline ::ommx::v1::Constraint* Instance::add_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ommx::v1::Constraint* _add = _internal_mutable_constraints()->Add();
  // @@protoc_insertion_point(field_add:ommx.v1.Instance.constraints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>& Instance::constraints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ommx.v1.Instance.constraints)
  return _internal_constraints();
}
inline const ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>&
Instance::_internal_constraints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraints_;
}
inline ::google::protobuf::RepeatedPtrField<::ommx::v1::Constraint>*
Instance::_internal_mutable_constraints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.constraints_;
}

// .ommx.v1.Instance.Sense sense = 5 [json_name = "sense"];
inline void Instance::clear_sense() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sense_ = 0;
}
inline ::ommx::v1::Instance_Sense Instance::sense() const {
  // @@protoc_insertion_point(field_get:ommx.v1.Instance.sense)
  return _internal_sense();
}
inline void Instance::set_sense(::ommx::v1::Instance_Sense value) {
  _internal_set_sense(value);
  // @@protoc_insertion_point(field_set:ommx.v1.Instance.sense)
}
inline ::ommx::v1::Instance_Sense Instance::_internal_sense() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ommx::v1::Instance_Sense>(_impl_.sense_);
}
inline void Instance::_internal_set_sense(::ommx::v1::Instance_Sense value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sense_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace ommx


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ommx::v1::Instance_Sense> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ommx::v1::Instance_Sense>() {
  return ::ommx::v1::Instance_Sense_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ommx_2fv1_2finstance_2eproto_2epb_2eh
