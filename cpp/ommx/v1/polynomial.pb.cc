// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ommx/v1/polynomial.proto
// Protobuf C++ Version: 5.27.3

#include "ommx/v1/polynomial.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ommx {
namespace v1 {

inline constexpr Monomial::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ids_{},
        _ids_cached_byte_size_{0},
        coefficient_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Monomial::Monomial(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MonomialDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MonomialDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MonomialDefaultTypeInternal() {}
  union {
    Monomial _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MonomialDefaultTypeInternal _Monomial_default_instance_;

inline constexpr Polynomial::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : terms_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Polynomial::Polynomial(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolynomialDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolynomialDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolynomialDefaultTypeInternal() {}
  union {
    Polynomial _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolynomialDefaultTypeInternal _Polynomial_default_instance_;
}  // namespace v1
}  // namespace ommx
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ommx_2fv1_2fpolynomial_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ommx_2fv1_2fpolynomial_2eproto = nullptr;
const ::uint32_t
    TableStruct_ommx_2fv1_2fpolynomial_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Monomial, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Monomial, _impl_.ids_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Monomial, _impl_.coefficient_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Polynomial, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Polynomial, _impl_.terms_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ommx::v1::Monomial)},
        {10, -1, -1, sizeof(::ommx::v1::Polynomial)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ommx::v1::_Monomial_default_instance_._instance,
    &::ommx::v1::_Polynomial_default_instance_._instance,
};
const char descriptor_table_protodef_ommx_2fv1_2fpolynomial_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030ommx/v1/polynomial.proto\022\007ommx.v1\">\n\010M"
    "onomial\022\020\n\003ids\030\001 \003(\004R\003ids\022 \n\013coefficient"
    "\030\002 \001(\001R\013coefficient\"5\n\nPolynomial\022\'\n\005ter"
    "ms\030\001 \003(\0132\021.ommx.v1.MonomialR\005termsB[\n\013co"
    "m.ommx.v1B\017PolynomialProtoP\001\242\002\003OXX\252\002\007Omm"
    "x.V1\312\002\007Ommx\\V1\342\002\023Ommx\\V1\\GPBMetadata\352\002\010O"
    "mmx::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_ommx_2fv1_2fpolynomial_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ommx_2fv1_2fpolynomial_2eproto = {
    false,
    false,
    255,
    descriptor_table_protodef_ommx_2fv1_2fpolynomial_2eproto,
    "ommx/v1/polynomial.proto",
    &descriptor_table_ommx_2fv1_2fpolynomial_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_ommx_2fv1_2fpolynomial_2eproto::offsets,
    file_level_enum_descriptors_ommx_2fv1_2fpolynomial_2eproto,
    file_level_service_descriptors_ommx_2fv1_2fpolynomial_2eproto,
};
namespace ommx {
namespace v1 {
// ===================================================================

class Monomial::_Internal {
 public:
};

Monomial::Monomial(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Monomial)
}
inline PROTOBUF_NDEBUG_INLINE Monomial::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ommx::v1::Monomial& from_msg)
      : ids_{visibility, arena, from.ids_},
        _ids_cached_byte_size_{0},
        _cached_size_{0} {}

Monomial::Monomial(
    ::google::protobuf::Arena* arena,
    const Monomial& from)
    : ::google::protobuf::Message(arena) {
  Monomial* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.coefficient_ = from._impl_.coefficient_;

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Monomial)
}
inline PROTOBUF_NDEBUG_INLINE Monomial::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ids_{visibility, arena},
        _ids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void Monomial::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.coefficient_ = {};
}
Monomial::~Monomial() {
  // @@protoc_insertion_point(destructor:ommx.v1.Monomial)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Monomial::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Monomial::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Monomial, _impl_._cached_size_),
              false,
          },
          &Monomial::MergeImpl,
          &Monomial::kDescriptorMethods,
          &descriptor_table_ommx_2fv1_2fpolynomial_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Monomial::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Monomial_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::Monomial>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double coefficient = 2 [json_name = "coefficient"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Monomial, _impl_.coefficient_)}},
    // repeated uint64 ids = 1 [json_name = "ids"];
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Monomial, _impl_.ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint64 ids = 1 [json_name = "ids"];
    {PROTOBUF_FIELD_OFFSET(Monomial, _impl_.ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // double coefficient = 2 [json_name = "coefficient"];
    {PROTOBUF_FIELD_OFFSET(Monomial, _impl_.coefficient_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Monomial::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.Monomial)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.coefficient_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Monomial::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.Monomial)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint64 ids = 1 [json_name = "ids"];
  {
    int byte_size = _impl_._ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_ids(), byte_size, target);
    }
  }

  // double coefficient = 2 [json_name = "coefficient"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_coefficient = this->_internal_coefficient();
  ::uint64_t raw_coefficient;
  memcpy(&raw_coefficient, &tmp_coefficient, sizeof(tmp_coefficient));
  if (raw_coefficient != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_coefficient(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.Monomial)
  return target;
}

::size_t Monomial::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.Monomial)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated uint64 ids = 1 [json_name = "ids"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_ids())
    ;
    _impl_._ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // double coefficient = 2 [json_name = "coefficient"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_coefficient = this->_internal_coefficient();
  ::uint64_t raw_coefficient;
  memcpy(&raw_coefficient, &tmp_coefficient, sizeof(tmp_coefficient));
  if (raw_coefficient != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Monomial::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Monomial*>(&to_msg);
  auto& from = static_cast<const Monomial&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.Monomial)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ids()->MergeFrom(from._internal_ids());
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_coefficient = from._internal_coefficient();
  ::uint64_t raw_coefficient;
  memcpy(&raw_coefficient, &tmp_coefficient, sizeof(tmp_coefficient));
  if (raw_coefficient != 0) {
    _this->_impl_.coefficient_ = from._impl_.coefficient_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Monomial::CopyFrom(const Monomial& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.Monomial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Monomial::InternalSwap(Monomial* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
        swap(_impl_.coefficient_, other->_impl_.coefficient_);
}

::google::protobuf::Metadata Monomial::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Polynomial::_Internal {
 public:
};

Polynomial::Polynomial(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Polynomial)
}
inline PROTOBUF_NDEBUG_INLINE Polynomial::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ommx::v1::Polynomial& from_msg)
      : terms_{visibility, arena, from.terms_},
        _cached_size_{0} {}

Polynomial::Polynomial(
    ::google::protobuf::Arena* arena,
    const Polynomial& from)
    : ::google::protobuf::Message(arena) {
  Polynomial* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Polynomial)
}
inline PROTOBUF_NDEBUG_INLINE Polynomial::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : terms_{visibility, arena},
        _cached_size_{0} {}

inline void Polynomial::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Polynomial::~Polynomial() {
  // @@protoc_insertion_point(destructor:ommx.v1.Polynomial)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Polynomial::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Polynomial::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Polynomial, _impl_._cached_size_),
              false,
          },
          &Polynomial::MergeImpl,
          &Polynomial::kDescriptorMethods,
          &descriptor_table_ommx_2fv1_2fpolynomial_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Polynomial::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Polynomial_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::Polynomial>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ommx.v1.Monomial terms = 1 [json_name = "terms"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Polynomial, _impl_.terms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ommx.v1.Monomial terms = 1 [json_name = "terms"];
    {PROTOBUF_FIELD_OFFSET(Polynomial, _impl_.terms_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ommx::v1::Monomial>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Polynomial::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.Polynomial)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.terms_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Polynomial::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.Polynomial)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ommx.v1.Monomial terms = 1 [json_name = "terms"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_terms_size());
       i < n; i++) {
    const auto& repfield = this->_internal_terms().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.Polynomial)
  return target;
}

::size_t Polynomial::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.Polynomial)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .ommx.v1.Monomial terms = 1 [json_name = "terms"];
  total_size += 1UL * this->_internal_terms_size();
  for (const auto& msg : this->_internal_terms()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Polynomial::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Polynomial*>(&to_msg);
  auto& from = static_cast<const Polynomial&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.Polynomial)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_terms()->MergeFrom(
      from._internal_terms());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Polynomial::CopyFrom(const Polynomial& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.Polynomial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Polynomial::InternalSwap(Polynomial* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.terms_.InternalSwap(&other->_impl_.terms_);
}

::google::protobuf::Metadata Polynomial::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace ommx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ommx_2fv1_2fpolynomial_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
