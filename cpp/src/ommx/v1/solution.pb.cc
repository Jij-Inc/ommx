// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ommx/v1/solution.proto
// Protobuf C++ Version: 5.26.1

#include "ommx/v1/solution.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ommx {
namespace v1 {
      template <typename>
PROTOBUF_CONSTEXPR Unbounded::Unbounded(::_pbi::ConstantInitialized) {}
struct UnboundedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnboundedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnboundedDefaultTypeInternal() {}
  union {
    Unbounded _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnboundedDefaultTypeInternal _Unbounded_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR State_EntriesEntry_DoNotUse::State_EntriesEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct State_EntriesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR State_EntriesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~State_EntriesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    State_EntriesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 State_EntriesEntry_DoNotUseDefaultTypeInternal _State_EntriesEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Infeasible::Infeasible(::_pbi::ConstantInitialized) {}
struct InfeasibleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfeasibleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfeasibleDefaultTypeInternal() {}
  union {
    Infeasible _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfeasibleDefaultTypeInternal _Infeasible_default_instance_;

inline constexpr State::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR State::State(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateDefaultTypeInternal() {}
  union {
    State _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateDefaultTypeInternal _State_default_instance_;

inline constexpr Solution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        decision_variables_{},
        evaluated_constraints_{},
        state_{nullptr},
        objective_{0},
        feasible_{false},
        optimality_{static_cast< ::ommx::v1::Optimality >(0)},
        relaxation_{static_cast< ::ommx::v1::Relaxation >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Solution::Solution(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SolutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SolutionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SolutionDefaultTypeInternal() {}
  union {
    Solution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SolutionDefaultTypeInternal _Solution_default_instance_;

inline constexpr Result::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Result::Result(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultDefaultTypeInternal() {}
  union {
    Result _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultDefaultTypeInternal _Result_default_instance_;
}  // namespace v1
}  // namespace ommx
static ::_pb::Metadata file_level_metadata_ommx_2fv1_2fsolution_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ommx_2fv1_2fsolution_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ommx_2fv1_2fsolution_2eproto = nullptr;
const ::uint32_t
    TableStruct_ommx_2fv1_2fsolution_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ommx::v1::State_EntriesEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::State_EntriesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::State_EntriesEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::State_EntriesEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ommx::v1::State, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::State, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_.objective_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_.decision_variables_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_.evaluated_constraints_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_.feasible_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_.optimality_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Solution, _impl_.relaxation_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Infeasible, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Unbounded, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Result, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Result, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Result, _impl_.result_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::ommx::v1::State_EntriesEntry_DoNotUse)},
        {12, -1, -1, sizeof(::ommx::v1::State)},
        {21, 36, -1, sizeof(::ommx::v1::Solution)},
        {43, -1, -1, sizeof(::ommx::v1::Infeasible)},
        {51, -1, -1, sizeof(::ommx::v1::Unbounded)},
        {59, -1, -1, sizeof(::ommx::v1::Result)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ommx::v1::_State_EntriesEntry_DoNotUse_default_instance_._instance,
    &::ommx::v1::_State_default_instance_._instance,
    &::ommx::v1::_Solution_default_instance_._instance,
    &::ommx::v1::_Infeasible_default_instance_._instance,
    &::ommx::v1::_Unbounded_default_instance_._instance,
    &::ommx::v1::_Result_default_instance_._instance,
};
const char descriptor_table_protodef_ommx_2fv1_2fsolution_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026ommx/v1/solution.proto\022\007ommx.v1\032\030ommx/"
    "v1/constraint.proto\032 ommx/v1/decision_va"
    "riables.proto\"z\n\005State\0225\n\007entries\030\001 \003(\0132"
    "\033.ommx.v1.State.EntriesEntryR\007entries\032:\n"
    "\014EntriesEntry\022\020\n\003key\030\001 \001(\004R\003key\022\024\n\005value"
    "\030\002 \001(\001R\005value:\0028\001\"\361\002\n\010Solution\022$\n\005state\030"
    "\001 \001(\0132\016.ommx.v1.StateR\005state\022\034\n\tobjectiv"
    "e\030\002 \001(\001R\tobjective\022H\n\022decision_variables"
    "\030\003 \003(\0132\031.ommx.v1.DecisionVariableR\021decis"
    "ionVariables\022Q\n\025evaluated_constraints\030\004 "
    "\003(\0132\034.ommx.v1.EvaluatedConstraintR\024evalu"
    "atedConstraints\022\032\n\010feasible\030\005 \001(\010R\010feasi"
    "ble\0223\n\noptimality\030\006 \001(\0162\023.ommx.v1.Optima"
    "lityR\noptimality\0223\n\nrelaxation\030\007 \001(\0162\023.o"
    "mmx.v1.RelaxationR\nrelaxation\"\014\n\nInfeasi"
    "ble\"\013\n\tUnbounded\"\306\001\n\006Result\022\026\n\005error\030\001 \001"
    "(\tH\000R\005error\022/\n\010solution\030\002 \001(\0132\021.ommx.v1."
    "SolutionH\000R\010solution\0225\n\ninfeasible\030\003 \001(\013"
    "2\023.ommx.v1.InfeasibleH\000R\ninfeasible\0222\n\tu"
    "nbounded\030\004 \001(\0132\022.ommx.v1.UnboundedH\000R\tun"
    "boundedB\010\n\006result*\\\n\nOptimality\022\032\n\026OPTIM"
    "ALITY_UNSPECIFIED\020\000\022\026\n\022OPTIMALITY_OPTIMA"
    "L\020\001\022\032\n\026OPTIMALITY_NOT_OPTIMAL\020\002*C\n\nRelax"
    "ation\022\032\n\026RELAXATION_UNSPECIFIED\020\000\022\031\n\025REL"
    "AXATION_LP_RELAXED\020\001BY\n\013com.ommx.v1B\rSol"
    "utionProtoP\001\242\002\003OXX\252\002\007Ommx.V1\312\002\007Ommx\\V1\342\002"
    "\023Ommx\\V1\\GPBMetadata\352\002\010Ommx::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ommx_2fv1_2fsolution_2eproto_deps[2] =
    {
        &::descriptor_table_ommx_2fv1_2fconstraint_2eproto,
        &::descriptor_table_ommx_2fv1_2fdecision_5fvariables_2eproto,
};
static ::absl::once_flag descriptor_table_ommx_2fv1_2fsolution_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ommx_2fv1_2fsolution_2eproto = {
    false,
    false,
    1079,
    descriptor_table_protodef_ommx_2fv1_2fsolution_2eproto,
    "ommx/v1/solution.proto",
    &descriptor_table_ommx_2fv1_2fsolution_2eproto_once,
    descriptor_table_ommx_2fv1_2fsolution_2eproto_deps,
    2,
    6,
    schemas,
    file_default_instances,
    TableStruct_ommx_2fv1_2fsolution_2eproto::offsets,
    file_level_metadata_ommx_2fv1_2fsolution_2eproto,
    file_level_enum_descriptors_ommx_2fv1_2fsolution_2eproto,
    file_level_service_descriptors_ommx_2fv1_2fsolution_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ommx_2fv1_2fsolution_2eproto_getter() {
  return &descriptor_table_ommx_2fv1_2fsolution_2eproto;
}
namespace ommx {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Optimality_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto);
  return file_level_enum_descriptors_ommx_2fv1_2fsolution_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Optimality_internal_data_[] = {
    196608u, 0u, };
bool Optimality_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* Relaxation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto);
  return file_level_enum_descriptors_ommx_2fv1_2fsolution_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Relaxation_internal_data_[] = {
    131072u, 0u, };
bool Relaxation_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

State_EntriesEntry_DoNotUse::State_EntriesEntry_DoNotUse() {}
State_EntriesEntry_DoNotUse::State_EntriesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata State_EntriesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fsolution_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fsolution_2eproto[0]);
}
// ===================================================================

class State::_Internal {
 public:
};

State::State(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

State::State(
    ::google::protobuf::Arena* arena,
    const State& from)
    : ::google::protobuf::Message(arena) {
  State* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ommx.v1.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void State::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
State::~State() {
  // @@protoc_insertion_point(destructor:ommx.v1.State)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void State::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
State::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(State, _impl_._cached_size_),
              false,
          },
          &State::MergeImpl,
          &State::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void State::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.State)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* State::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> State::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_State_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::State>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<uint64, double> entries = 1 [json_name = "entries"];
    {PROTOBUF_FIELD_OFFSET(State, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(State()._impl_.entries_)>(
        0, 0, 0, 4,
        1)},
  }}, {{
  }},
};

::uint8_t* State::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.State)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<uint64, double> entries = 1 [json_name = "entries"];
  if (!_internal_entries().empty()) {
    using MapType = ::google::protobuf::Map<::uint64_t, double>;
    using WireHelper = _pbi::MapEntryFuncs<::uint64_t, double,
                                   _pbi::WireFormatLite::TYPE_UINT64,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>;
    const auto& field = _internal_entries();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.State)
  return target;
}

::size_t State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.State)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, double> entries = 1 [json_name = "entries"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_entries_size());
  for (const auto& entry : _internal_entries()) {
    total_size += _pbi::MapEntryFuncs<::uint64_t, double,
                                   _pbi::WireFormatLite::TYPE_UINT64,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void State::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<State*>(&to_msg);
  auto& from = static_cast<const State&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.State)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entries_.MergeFrom(from._impl_.entries_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool State::IsInitialized() const {
  return true;
}

void State::InternalSwap(State* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fsolution_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fsolution_2eproto[1]);
}
// ===================================================================

class Solution::_Internal {
 public:
  using HasBits = decltype(std::declval<Solution>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Solution, _impl_._has_bits_);
};

void Solution::clear_decision_variables() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.decision_variables_.Clear();
}
void Solution::clear_evaluated_constraints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.evaluated_constraints_.Clear();
}
Solution::Solution(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Solution)
}
inline PROTOBUF_NDEBUG_INLINE Solution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        decision_variables_{visibility, arena, from.decision_variables_},
        evaluated_constraints_{visibility, arena, from.evaluated_constraints_} {}

Solution::Solution(
    ::google::protobuf::Arena* arena,
    const Solution& from)
    : ::google::protobuf::Message(arena) {
  Solution* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.state_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ommx::v1::State>(
                              arena, *from._impl_.state_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objective_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, objective_),
           offsetof(Impl_, relaxation_) -
               offsetof(Impl_, objective_) +
               sizeof(Impl_::relaxation_));

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Solution)
}
inline PROTOBUF_NDEBUG_INLINE Solution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        decision_variables_{visibility, arena},
        evaluated_constraints_{visibility, arena} {}

inline void Solution::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, state_),
           0,
           offsetof(Impl_, relaxation_) -
               offsetof(Impl_, state_) +
               sizeof(Impl_::relaxation_));
}
Solution::~Solution() {
  // @@protoc_insertion_point(destructor:ommx.v1.Solution)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Solution::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.state_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Solution::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Solution, _impl_._cached_size_),
              false,
          },
          &Solution::MergeImpl,
          &Solution::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Solution::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.Solution)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.decision_variables_.Clear();
  _impl_.evaluated_constraints_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  ::memset(&_impl_.objective_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.relaxation_) -
      reinterpret_cast<char*>(&_impl_.objective_)) + sizeof(_impl_.relaxation_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Solution::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 0, 2> Solution::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Solution, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Solution_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::Solution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ommx.v1.State state = 1 [json_name = "state"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Solution, _impl_.state_)}},
    // double objective = 2 [json_name = "objective"];
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Solution, _impl_.objective_)}},
    // repeated .ommx.v1.DecisionVariable decision_variables = 3 [json_name = "decisionVariables"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(Solution, _impl_.decision_variables_)}},
    // repeated .ommx.v1.EvaluatedConstraint evaluated_constraints = 4 [json_name = "evaluatedConstraints"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(Solution, _impl_.evaluated_constraints_)}},
    // bool feasible = 5 [json_name = "feasible"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Solution, _impl_.feasible_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Solution, _impl_.feasible_)}},
    // .ommx.v1.Optimality optimality = 6 [json_name = "optimality"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Solution, _impl_.optimality_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Solution, _impl_.optimality_)}},
    // .ommx.v1.Relaxation relaxation = 7 [json_name = "relaxation"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Solution, _impl_.relaxation_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Solution, _impl_.relaxation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ommx.v1.State state = 1 [json_name = "state"];
    {PROTOBUF_FIELD_OFFSET(Solution, _impl_.state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double objective = 2 [json_name = "objective"];
    {PROTOBUF_FIELD_OFFSET(Solution, _impl_.objective_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated .ommx.v1.DecisionVariable decision_variables = 3 [json_name = "decisionVariables"];
    {PROTOBUF_FIELD_OFFSET(Solution, _impl_.decision_variables_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ommx.v1.EvaluatedConstraint evaluated_constraints = 4 [json_name = "evaluatedConstraints"];
    {PROTOBUF_FIELD_OFFSET(Solution, _impl_.evaluated_constraints_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool feasible = 5 [json_name = "feasible"];
    {PROTOBUF_FIELD_OFFSET(Solution, _impl_.feasible_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .ommx.v1.Optimality optimality = 6 [json_name = "optimality"];
    {PROTOBUF_FIELD_OFFSET(Solution, _impl_.optimality_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ommx.v1.Relaxation relaxation = 7 [json_name = "relaxation"];
    {PROTOBUF_FIELD_OFFSET(Solution, _impl_.relaxation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ommx::v1::State>()},
    {::_pbi::TcParser::GetTable<::ommx::v1::DecisionVariable>()},
    {::_pbi::TcParser::GetTable<::ommx::v1::EvaluatedConstraint>()},
  }}, {{
  }},
};

::uint8_t* Solution::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.Solution)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ommx.v1.State state = 1 [json_name = "state"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.state_, _impl_.state_->GetCachedSize(), target, stream);
  }

  // double objective = 2 [json_name = "objective"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_objective = this->_internal_objective();
  ::uint64_t raw_objective;
  memcpy(&raw_objective, &tmp_objective, sizeof(tmp_objective));
  if (raw_objective != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_objective(), target);
  }

  // repeated .ommx.v1.DecisionVariable decision_variables = 3 [json_name = "decisionVariables"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_decision_variables_size());
       i < n; i++) {
    const auto& repfield = this->_internal_decision_variables().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .ommx.v1.EvaluatedConstraint evaluated_constraints = 4 [json_name = "evaluatedConstraints"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_evaluated_constraints_size());
       i < n; i++) {
    const auto& repfield = this->_internal_evaluated_constraints().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool feasible = 5 [json_name = "feasible"];
  if (this->_internal_feasible() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_feasible(), target);
  }

  // .ommx.v1.Optimality optimality = 6 [json_name = "optimality"];
  if (this->_internal_optimality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_optimality(), target);
  }

  // .ommx.v1.Relaxation relaxation = 7 [json_name = "relaxation"];
  if (this->_internal_relaxation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_relaxation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.Solution)
  return target;
}

::size_t Solution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.Solution)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ommx.v1.DecisionVariable decision_variables = 3 [json_name = "decisionVariables"];
  total_size += 1UL * this->_internal_decision_variables_size();
  for (const auto& msg : this->_internal_decision_variables()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .ommx.v1.EvaluatedConstraint evaluated_constraints = 4 [json_name = "evaluatedConstraints"];
  total_size += 1UL * this->_internal_evaluated_constraints_size();
  for (const auto& msg : this->_internal_evaluated_constraints()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .ommx.v1.State state = 1 [json_name = "state"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.state_);
  }

  // double objective = 2 [json_name = "objective"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_objective = this->_internal_objective();
  ::uint64_t raw_objective;
  memcpy(&raw_objective, &tmp_objective, sizeof(tmp_objective));
  if (raw_objective != 0) {
    total_size += 9;
  }

  // bool feasible = 5 [json_name = "feasible"];
  if (this->_internal_feasible() != 0) {
    total_size += 2;
  }

  // .ommx.v1.Optimality optimality = 6 [json_name = "optimality"];
  if (this->_internal_optimality() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_optimality());
  }

  // .ommx.v1.Relaxation relaxation = 7 [json_name = "relaxation"];
  if (this->_internal_relaxation() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_relaxation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Solution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Solution*>(&to_msg);
  auto& from = static_cast<const Solution&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.Solution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_decision_variables()->MergeFrom(
      from._internal_decision_variables());
  _this->_internal_mutable_evaluated_constraints()->MergeFrom(
      from._internal_evaluated_constraints());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.state_ != nullptr);
    if (_this->_impl_.state_ == nullptr) {
      _this->_impl_.state_ =
          ::google::protobuf::Message::CopyConstruct<::ommx::v1::State>(arena, *from._impl_.state_);
    } else {
      _this->_impl_.state_->MergeFrom(*from._impl_.state_);
    }
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_objective = from._internal_objective();
  ::uint64_t raw_objective;
  memcpy(&raw_objective, &tmp_objective, sizeof(tmp_objective));
  if (raw_objective != 0) {
    _this->_impl_.objective_ = from._impl_.objective_;
  }
  if (from._internal_feasible() != 0) {
    _this->_impl_.feasible_ = from._impl_.feasible_;
  }
  if (from._internal_optimality() != 0) {
    _this->_impl_.optimality_ = from._impl_.optimality_;
  }
  if (from._internal_relaxation() != 0) {
    _this->_impl_.relaxation_ = from._impl_.relaxation_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Solution::CopyFrom(const Solution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.Solution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Solution::IsInitialized() const {
  return true;
}

void Solution::InternalSwap(Solution* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.decision_variables_.InternalSwap(&other->_impl_.decision_variables_);
  _impl_.evaluated_constraints_.InternalSwap(&other->_impl_.evaluated_constraints_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Solution, _impl_.relaxation_)
      + sizeof(Solution::_impl_.relaxation_)
      - PROTOBUF_FIELD_OFFSET(Solution, _impl_.state_)>(
          reinterpret_cast<char*>(&_impl_.state_),
          reinterpret_cast<char*>(&other->_impl_.state_));
}

::google::protobuf::Metadata Solution::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fsolution_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fsolution_2eproto[2]);
}
// ===================================================================

class Infeasible::_Internal {
 public:
};

Infeasible::Infeasible(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Infeasible)
}
Infeasible::Infeasible(
    ::google::protobuf::Arena* arena,
    const Infeasible& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Infeasible* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Infeasible)
}









::google::protobuf::Metadata Infeasible::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fsolution_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fsolution_2eproto[3]);
}
// ===================================================================

class Unbounded::_Internal {
 public:
};

Unbounded::Unbounded(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Unbounded)
}
Unbounded::Unbounded(
    ::google::protobuf::Arena* arena,
    const Unbounded& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Unbounded* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Unbounded)
}









::google::protobuf::Metadata Unbounded::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fsolution_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fsolution_2eproto[4]);
}
// ===================================================================

class Result::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::ommx::v1::Result, _impl_._oneof_case_);
};

void Result::set_allocated_solution(::ommx::v1::Solution* solution) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (solution) {
    ::google::protobuf::Arena* submessage_arena = solution->GetArena();
    if (message_arena != submessage_arena) {
      solution = ::google::protobuf::internal::GetOwnedMessage(message_arena, solution, submessage_arena);
    }
    set_has_solution();
    _impl_.result_.solution_ = solution;
  }
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Result.solution)
}
void Result::set_allocated_infeasible(::ommx::v1::Infeasible* infeasible) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (infeasible) {
    ::google::protobuf::Arena* submessage_arena = infeasible->GetArena();
    if (message_arena != submessage_arena) {
      infeasible = ::google::protobuf::internal::GetOwnedMessage(message_arena, infeasible, submessage_arena);
    }
    set_has_infeasible();
    _impl_.result_.infeasible_ = infeasible;
  }
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Result.infeasible)
}
void Result::set_allocated_unbounded(::ommx::v1::Unbounded* unbounded) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result();
  if (unbounded) {
    ::google::protobuf::Arena* submessage_arena = unbounded->GetArena();
    if (message_arena != submessage_arena) {
      unbounded = ::google::protobuf::internal::GetOwnedMessage(message_arena, unbounded, submessage_arena);
    }
    set_has_unbounded();
    _impl_.result_.unbounded_ = unbounded;
  }
  // @@protoc_insertion_point(field_set_allocated:ommx.v1.Result.unbounded)
}
Result::Result(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Result)
}
inline PROTOBUF_NDEBUG_INLINE Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Result::Result(
    ::google::protobuf::Arena* arena,
    const Result& from)
    : ::google::protobuf::Message(arena) {
  Result* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (result_case()) {
    case RESULT_NOT_SET:
      break;
      case kError:
        new (&_impl_.result_.error_) decltype(_impl_.result_.error_){arena, from._impl_.result_.error_};
        break;
      case kSolution:
        _impl_.result_.solution_ = ::google::protobuf::Message::CopyConstruct<::ommx::v1::Solution>(arena, *from._impl_.result_.solution_);
        break;
      case kInfeasible:
        _impl_.result_.infeasible_ = ::google::protobuf::Message::CopyConstruct<::ommx::v1::Infeasible>(arena, *from._impl_.result_.infeasible_);
        break;
      case kUnbounded:
        _impl_.result_.unbounded_ = ::google::protobuf::Message::CopyConstruct<::ommx::v1::Unbounded>(arena, *from._impl_.result_.unbounded_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Result)
}
inline PROTOBUF_NDEBUG_INLINE Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Result::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Result::~Result() {
  // @@protoc_insertion_point(destructor:ommx.v1.Result)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Result::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_result()) {
    clear_result();
  }
  _impl_.~Impl_();
}

void Result::clear_result() {
// @@protoc_insertion_point(one_of_clear_start:ommx.v1.Result)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (result_case()) {
    case kError: {
      _impl_.result_.error_.Destroy();
      break;
    }
    case kSolution: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.solution_;
      }
      break;
    }
    case kInfeasible: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.infeasible_;
      }
      break;
    }
    case kUnbounded: {
      if (GetArena() == nullptr) {
        delete _impl_.result_.unbounded_;
      }
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Result::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Result, _impl_._cached_size_),
              false,
          },
          &Result::MergeImpl,
          &Result::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.Result)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_result();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Result::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 3, 28, 2> Result::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Result_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::Result>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string error = 1 [json_name = "error"];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.result_.error_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ommx.v1.Solution solution = 2 [json_name = "solution"];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.result_.solution_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ommx.v1.Infeasible infeasible = 3 [json_name = "infeasible"];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.result_.infeasible_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .ommx.v1.Unbounded unbounded = 4 [json_name = "unbounded"];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.result_.unbounded_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ommx::v1::Solution>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::ommx::v1::_Infeasible_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::ommx::v1::_Unbounded_default_instance_},
  }}, {{
    "\16\5\0\0\0\0\0\0"
    "ommx.v1.Result"
    "error"
  }},
};

::uint8_t* Result::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.Result)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (result_case()) {
    case kError: {
      const std::string& _s = this->_internal_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.Result.error");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kSolution: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.result_.solution_, _impl_.result_.solution_->GetCachedSize(), target, stream);
      break;
    }
    case kInfeasible: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.result_.infeasible_, _impl_.result_.infeasible_->GetCachedSize(), target, stream);
      break;
    }
    case kUnbounded: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.result_.unbounded_, _impl_.result_.unbounded_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.Result)
  return target;
}

::size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.Result)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (result_case()) {
    // string error = 1 [json_name = "error"];
    case kError: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_error());
      break;
    }
    // .ommx.v1.Solution solution = 2 [json_name = "solution"];
    case kSolution: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.solution_);
      break;
    }
    // .ommx.v1.Infeasible infeasible = 3 [json_name = "infeasible"];
    case kInfeasible: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.infeasible_);
      break;
    }
    // .ommx.v1.Unbounded unbounded = 4 [json_name = "unbounded"];
    case kUnbounded: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.result_.unbounded_);
      break;
    }
    case RESULT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Result::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Result*>(&to_msg);
  auto& from = static_cast<const Result&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.Result)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_result();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kError: {
        if (oneof_needs_init) {
          _this->_impl_.result_.error_.InitDefault();
        }
        _this->_impl_.result_.error_.Set(from._internal_error(), arena);
        break;
      }
      case kSolution: {
        if (oneof_needs_init) {
          _this->_impl_.result_.solution_ =
              ::google::protobuf::Message::CopyConstruct<::ommx::v1::Solution>(arena, *from._impl_.result_.solution_);
        } else {
          _this->_impl_.result_.solution_->MergeFrom(from._internal_solution());
        }
        break;
      }
      case kInfeasible: {
        if (oneof_needs_init) {
          _this->_impl_.result_.infeasible_ =
              ::google::protobuf::Message::CopyConstruct<::ommx::v1::Infeasible>(arena, *from._impl_.result_.infeasible_);
        } else {
          _this->_impl_.result_.infeasible_->MergeFrom(from._internal_infeasible());
        }
        break;
      }
      case kUnbounded: {
        if (oneof_needs_init) {
          _this->_impl_.result_.unbounded_ =
              ::google::protobuf::Message::CopyConstruct<::ommx::v1::Unbounded>(arena, *from._impl_.result_.unbounded_);
        } else {
          _this->_impl_.result_.unbounded_->MergeFrom(from._internal_unbounded());
        }
        break;
      }
      case RESULT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Result::IsInitialized() const {
  return true;
}

void Result::InternalSwap(Result* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fsolution_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fsolution_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace ommx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_ommx_2fv1_2fsolution_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
