// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ommx/v1/constraint.proto
// Protobuf C++ Version: 5.26.1

#include "ommx/v1/constraint.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ommx {
namespace v1 {
      template <typename>
PROTOBUF_CONSTEXPR EvaluatedConstraint_ParametersEntry_DoNotUse::EvaluatedConstraint_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct EvaluatedConstraint_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvaluatedConstraint_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvaluatedConstraint_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EvaluatedConstraint_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvaluatedConstraint_ParametersEntry_DoNotUseDefaultTypeInternal _EvaluatedConstraint_ParametersEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Constraint_ParametersEntry_DoNotUse::Constraint_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct Constraint_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Constraint_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Constraint_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Constraint_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Constraint_ParametersEntry_DoNotUseDefaultTypeInternal _Constraint_ParametersEntry_DoNotUse_default_instance_;

inline constexpr EvaluatedConstraint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        used_decision_variable_ids_{},
        _used_decision_variable_ids_cached_byte_size_{0},
        parameters_{},
        subscripts_{},
        _subscripts_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        evaluated_value_{0},
        dual_variable_{0},
        equality_{static_cast< ::ommx::v1::Equality >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR EvaluatedConstraint::EvaluatedConstraint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EvaluatedConstraintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvaluatedConstraintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvaluatedConstraintDefaultTypeInternal() {}
  union {
    EvaluatedConstraint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvaluatedConstraintDefaultTypeInternal _EvaluatedConstraint_default_instance_;

inline constexpr Constraint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        subscripts_{},
        _subscripts_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        function_{nullptr},
        id_{::uint64_t{0u}},
        equality_{static_cast< ::ommx::v1::Equality >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Constraint::Constraint(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConstraintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstraintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstraintDefaultTypeInternal() {}
  union {
    Constraint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstraintDefaultTypeInternal _Constraint_default_instance_;
}  // namespace v1
}  // namespace ommx
static ::_pb::Metadata file_level_metadata_ommx_2fv1_2fconstraint_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ommx_2fv1_2fconstraint_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ommx_2fv1_2fconstraint_2eproto = nullptr;
const ::uint32_t
    TableStruct_ommx_2fv1_2fconstraint_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint_ParametersEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint_ParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint_ParametersEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint_ParametersEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_.equality_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_.function_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_.subscripts_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Constraint, _impl_.description_),
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint_ParametersEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint_ParametersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint_ParametersEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint_ParametersEntry_DoNotUse, value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.equality_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.evaluated_value_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.used_decision_variable_ids_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.subscripts_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::EvaluatedConstraint, _impl_.dual_variable_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::ommx::v1::Constraint_ParametersEntry_DoNotUse)},
        {12, 27, -1, sizeof(::ommx::v1::Constraint)},
        {34, 44, -1, sizeof(::ommx::v1::EvaluatedConstraint_ParametersEntry_DoNotUse)},
        {46, 63, -1, sizeof(::ommx::v1::EvaluatedConstraint)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ommx::v1::_Constraint_ParametersEntry_DoNotUse_default_instance_._instance,
    &::ommx::v1::_Constraint_default_instance_._instance,
    &::ommx::v1::_EvaluatedConstraint_ParametersEntry_DoNotUse_default_instance_._instance,
    &::ommx::v1::_EvaluatedConstraint_default_instance_._instance,
};
const char descriptor_table_protodef_ommx_2fv1_2fconstraint_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030ommx/v1/constraint.proto\022\007ommx.v1\032\026omm"
    "x/v1/function.proto\"\367\002\n\nConstraint\022\016\n\002id"
    "\030\001 \001(\004R\002id\022-\n\010equality\030\002 \001(\0162\021.ommx.v1.E"
    "qualityR\010equality\022-\n\010function\030\003 \001(\0132\021.om"
    "mx.v1.FunctionR\010function\022\036\n\nsubscripts\030\010"
    " \003(\003R\nsubscripts\022C\n\nparameters\030\005 \003(\0132#.o"
    "mmx.v1.Constraint.ParametersEntryR\nparam"
    "eters\022\027\n\004name\030\006 \001(\tH\000R\004name\210\001\001\022%\n\013descri"
    "ption\030\007 \001(\tH\001R\013description\210\001\001\032=\n\017Paramet"
    "ersEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001("
    "\tR\005value:\0028\001B\007\n\005_nameB\016\n\014_description\"\374\003"
    "\n\023EvaluatedConstraint\022\016\n\002id\030\001 \001(\004R\002id\022-\n"
    "\010equality\030\002 \001(\0162\021.ommx.v1.EqualityR\010equa"
    "lity\022\'\n\017evaluated_value\030\003 \001(\001R\016evaluated"
    "Value\022;\n\032used_decision_variable_ids\030\004 \003("
    "\004R\027usedDecisionVariableIds\022\036\n\nsubscripts"
    "\030\t \003(\003R\nsubscripts\022L\n\nparameters\030\005 \003(\0132,"
    ".ommx.v1.EvaluatedConstraint.ParametersE"
    "ntryR\nparameters\022\027\n\004name\030\006 \001(\tH\000R\004name\210\001"
    "\001\022%\n\013description\030\007 \001(\tH\001R\013description\210\001\001"
    "\022(\n\rdual_variable\030\010 \001(\001H\002R\014dualVariable\210"
    "\001\001\032=\n\017ParametersEntry\022\020\n\003key\030\001 \001(\tR\003key\022"
    "\024\n\005value\030\002 \001(\tR\005value:\0028\001B\007\n\005_nameB\016\n\014_d"
    "escriptionB\020\n\016_dual_variable*i\n\010Equality"
    "\022\030\n\024EQUALITY_UNSPECIFIED\020\000\022\032\n\026EQUALITY_E"
    "QUAL_TO_ZERO\020\001\022\'\n#EQUALITY_LESS_THAN_OR_"
    "EQUAL_TO_ZERO\020\002B[\n\013com.ommx.v1B\017Constrai"
    "ntProtoP\001\242\002\003OXX\252\002\007Ommx.V1\312\002\007Ommx\\V1\342\002\023Om"
    "mx\\V1\\GPBMetadata\352\002\010Ommx::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ommx_2fv1_2fconstraint_2eproto_deps[1] =
    {
        &::descriptor_table_ommx_2fv1_2ffunction_2eproto,
};
static ::absl::once_flag descriptor_table_ommx_2fv1_2fconstraint_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ommx_2fv1_2fconstraint_2eproto = {
    false,
    false,
    1156,
    descriptor_table_protodef_ommx_2fv1_2fconstraint_2eproto,
    "ommx/v1/constraint.proto",
    &descriptor_table_ommx_2fv1_2fconstraint_2eproto_once,
    descriptor_table_ommx_2fv1_2fconstraint_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_ommx_2fv1_2fconstraint_2eproto::offsets,
    file_level_metadata_ommx_2fv1_2fconstraint_2eproto,
    file_level_enum_descriptors_ommx_2fv1_2fconstraint_2eproto,
    file_level_service_descriptors_ommx_2fv1_2fconstraint_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ommx_2fv1_2fconstraint_2eproto_getter() {
  return &descriptor_table_ommx_2fv1_2fconstraint_2eproto;
}
namespace ommx {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Equality_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ommx_2fv1_2fconstraint_2eproto);
  return file_level_enum_descriptors_ommx_2fv1_2fconstraint_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Equality_internal_data_[] = {
    196608u, 0u, };
bool Equality_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

Constraint_ParametersEntry_DoNotUse::Constraint_ParametersEntry_DoNotUse() {}
Constraint_ParametersEntry_DoNotUse::Constraint_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata Constraint_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fconstraint_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fconstraint_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fconstraint_2eproto[0]);
}
// ===================================================================

class Constraint::_Internal {
 public:
  using HasBits = decltype(std::declval<Constraint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Constraint, _impl_._has_bits_);
};

void Constraint::clear_function() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.function_ != nullptr) _impl_.function_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Constraint::Constraint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Constraint)
}
inline PROTOBUF_NDEBUG_INLINE Constraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        subscripts_{visibility, arena, from.subscripts_},
        _subscripts_cached_byte_size_{0},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

Constraint::Constraint(
    ::google::protobuf::Arena* arena,
    const Constraint& from)
    : ::google::protobuf::Message(arena) {
  Constraint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.function_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::ommx::v1::Function>(
                              arena, *from._impl_.function_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, equality_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::equality_));

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Constraint)
}
inline PROTOBUF_NDEBUG_INLINE Constraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        subscripts_{visibility, arena},
        _subscripts_cached_byte_size_{0},
        name_(arena),
        description_(arena) {}

inline void Constraint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, function_),
           0,
           offsetof(Impl_, equality_) -
               offsetof(Impl_, function_) +
               sizeof(Impl_::equality_));
}
Constraint::~Constraint() {
  // @@protoc_insertion_point(destructor:ommx.v1.Constraint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Constraint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  delete _impl_.function_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Constraint::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Constraint, _impl_._cached_size_),
              false,
          },
          &Constraint::MergeImpl,
          &Constraint::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Constraint::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.Constraint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.subscripts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.function_ != nullptr);
      _impl_.function_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.equality_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.equality_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Constraint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 52, 2> Constraint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Constraint, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967048,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Constraint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::Constraint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 subscripts = 8 [json_name = "subscripts"];
    {::_pbi::TcParser::FastV64P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Constraint, _impl_.subscripts_)}},
    // uint64 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Constraint, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Constraint, _impl_.id_)}},
    // .ommx.v1.Equality equality = 2 [json_name = "equality"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Constraint, _impl_.equality_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Constraint, _impl_.equality_)}},
    // .ommx.v1.Function function = 3 [json_name = "function"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Constraint, _impl_.function_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 6 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Constraint, _impl_.name_)}},
    // optional string description = 7 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(Constraint, _impl_.description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Constraint, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .ommx.v1.Equality equality = 2 [json_name = "equality"];
    {PROTOBUF_FIELD_OFFSET(Constraint, _impl_.equality_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ommx.v1.Function function = 3 [json_name = "function"];
    {PROTOBUF_FIELD_OFFSET(Constraint, _impl_.function_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> parameters = 5 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(Constraint, _impl_.parameters_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional string name = 6 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Constraint, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string description = 7 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(Constraint, _impl_.description_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int64 subscripts = 8 [json_name = "subscripts"];
    {PROTOBUF_FIELD_OFFSET(Constraint, _impl_.subscripts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ommx::v1::Function>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Constraint()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\22\0\0\0\12\4\13\0"
    "ommx.v1.Constraint"
    "parameters"
    "name"
    "description"
  }},
};

::uint8_t* Constraint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.Constraint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // .ommx.v1.Equality equality = 2 [json_name = "equality"];
  if (this->_internal_equality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_equality(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ommx.v1.Function function = 3 [json_name = "function"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.function_, _impl_.function_->GetCachedSize(), target, stream);
  }

  // map<string, string> parameters = 5 [json_name = "parameters"];
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.Constraint.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.Constraint.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.Constraint.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.Constraint.parameters");
      }
    }
  }

  // optional string name = 6 [json_name = "name"];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.Constraint.name");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string description = 7 [json_name = "description"];
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.Constraint.description");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // repeated int64 subscripts = 8 [json_name = "subscripts"];
  {
    int byte_size = _impl_._subscripts_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          8, _internal_subscripts(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.Constraint)
  return target;
}

::size_t Constraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.Constraint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> parameters = 5 [json_name = "parameters"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated int64 subscripts = 8 [json_name = "subscripts"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_subscripts())
    ;
    _impl_._subscripts_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 6 [json_name = "name"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string description = 7 [json_name = "description"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_description());
    }

    // .ommx.v1.Function function = 3 [json_name = "function"];
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.function_);
    }

  }
  // uint64 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // .ommx.v1.Equality equality = 2 [json_name = "equality"];
  if (this->_internal_equality() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_equality());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Constraint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Constraint*>(&to_msg);
  auto& from = static_cast<const Constraint&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.Constraint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_internal_mutable_subscripts()->MergeFrom(from._internal_subscripts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.function_ != nullptr);
      if (_this->_impl_.function_ == nullptr) {
        _this->_impl_.function_ =
            ::google::protobuf::Message::CopyConstruct<::ommx::v1::Function>(arena, *from._impl_.function_);
      } else {
        _this->_impl_.function_->MergeFrom(*from._impl_.function_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_equality() != 0) {
    _this->_impl_.equality_ = from._impl_.equality_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Constraint::CopyFrom(const Constraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.Constraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Constraint::IsInitialized() const {
  return true;
}

void Constraint::InternalSwap(Constraint* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.subscripts_.InternalSwap(&other->_impl_.subscripts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Constraint, _impl_.equality_)
      + sizeof(Constraint::_impl_.equality_)
      - PROTOBUF_FIELD_OFFSET(Constraint, _impl_.function_)>(
          reinterpret_cast<char*>(&_impl_.function_),
          reinterpret_cast<char*>(&other->_impl_.function_));
}

::google::protobuf::Metadata Constraint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fconstraint_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fconstraint_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fconstraint_2eproto[1]);
}
// ===================================================================

EvaluatedConstraint_ParametersEntry_DoNotUse::EvaluatedConstraint_ParametersEntry_DoNotUse() {}
EvaluatedConstraint_ParametersEntry_DoNotUse::EvaluatedConstraint_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata EvaluatedConstraint_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fconstraint_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fconstraint_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fconstraint_2eproto[2]);
}
// ===================================================================

class EvaluatedConstraint::_Internal {
 public:
  using HasBits = decltype(std::declval<EvaluatedConstraint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_._has_bits_);
};

EvaluatedConstraint::EvaluatedConstraint(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.EvaluatedConstraint)
}
inline PROTOBUF_NDEBUG_INLINE EvaluatedConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        used_decision_variable_ids_{visibility, arena, from.used_decision_variable_ids_},
        _used_decision_variable_ids_cached_byte_size_{0},
        parameters_{visibility, arena, from.parameters_},
        subscripts_{visibility, arena, from.subscripts_},
        _subscripts_cached_byte_size_{0},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

EvaluatedConstraint::EvaluatedConstraint(
    ::google::protobuf::Arena* arena,
    const EvaluatedConstraint& from)
    : ::google::protobuf::Message(arena) {
  EvaluatedConstraint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, equality_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::equality_));

  // @@protoc_insertion_point(copy_constructor:ommx.v1.EvaluatedConstraint)
}
inline PROTOBUF_NDEBUG_INLINE EvaluatedConstraint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        used_decision_variable_ids_{visibility, arena},
        _used_decision_variable_ids_cached_byte_size_{0},
        parameters_{visibility, arena},
        subscripts_{visibility, arena},
        _subscripts_cached_byte_size_{0},
        name_(arena),
        description_(arena) {}

inline void EvaluatedConstraint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, equality_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::equality_));
}
EvaluatedConstraint::~EvaluatedConstraint() {
  // @@protoc_insertion_point(destructor:ommx.v1.EvaluatedConstraint)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EvaluatedConstraint::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EvaluatedConstraint::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_._cached_size_),
              false,
          },
          &EvaluatedConstraint::MergeImpl,
          &EvaluatedConstraint::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void EvaluatedConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.EvaluatedConstraint)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.used_decision_variable_ids_.Clear();
  _impl_.parameters_.Clear();
  _impl_.subscripts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.evaluated_value_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.evaluated_value_));
  _impl_.dual_variable_ = 0;
  _impl_.equality_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EvaluatedConstraint::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 69, 2> EvaluatedConstraint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EvaluatedConstraint_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::EvaluatedConstraint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EvaluatedConstraint, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.id_)}},
    // .ommx.v1.Equality equality = 2 [json_name = "equality"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EvaluatedConstraint, _impl_.equality_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.equality_)}},
    // double evaluated_value = 3 [json_name = "evaluatedValue"];
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.evaluated_value_)}},
    // repeated uint64 used_decision_variable_ids = 4 [json_name = "usedDecisionVariableIds"];
    {::_pbi::TcParser::FastV64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.used_decision_variable_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 6 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.name_)}},
    // optional string description = 7 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.description_)}},
    // optional double dual_variable = 8 [json_name = "dualVariable"];
    {::_pbi::TcParser::FastF64S1,
     {65, 2, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.dual_variable_)}},
    // repeated int64 subscripts = 9 [json_name = "subscripts"];
    {::_pbi::TcParser::FastV64P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.subscripts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .ommx.v1.Equality equality = 2 [json_name = "equality"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.equality_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double evaluated_value = 3 [json_name = "evaluatedValue"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.evaluated_value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated uint64 used_decision_variable_ids = 4 [json_name = "usedDecisionVariableIds"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.used_decision_variable_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // map<string, string> parameters = 5 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.parameters_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional string name = 6 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string description = 7 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.description_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional double dual_variable = 8 [json_name = "dualVariable"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.dual_variable_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated int64 subscripts = 9 [json_name = "subscripts"];
    {PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.subscripts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EvaluatedConstraint()._impl_.parameters_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\33\0\0\0\0\12\4\13\0\0\0\0\0\0\0\0"
    "ommx.v1.EvaluatedConstraint"
    "parameters"
    "name"
    "description"
  }},
};

::uint8_t* EvaluatedConstraint::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.EvaluatedConstraint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // .ommx.v1.Equality equality = 2 [json_name = "equality"];
  if (this->_internal_equality() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_equality(), target);
  }

  // double evaluated_value = 3 [json_name = "evaluatedValue"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_evaluated_value = this->_internal_evaluated_value();
  ::uint64_t raw_evaluated_value;
  memcpy(&raw_evaluated_value, &tmp_evaluated_value, sizeof(tmp_evaluated_value));
  if (raw_evaluated_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_evaluated_value(), target);
  }

  // repeated uint64 used_decision_variable_ids = 4 [json_name = "usedDecisionVariableIds"];
  {
    int byte_size = _impl_._used_decision_variable_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          4, _internal_used_decision_variable_ids(), byte_size, target);
    }
  }

  // map<string, string> parameters = 5 [json_name = "parameters"];
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.EvaluatedConstraint.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.EvaluatedConstraint.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.EvaluatedConstraint.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.EvaluatedConstraint.parameters");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 6 [json_name = "name"];
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.EvaluatedConstraint.name");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string description = 7 [json_name = "description"];
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ommx.v1.EvaluatedConstraint.description");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional double dual_variable = 8 [json_name = "dualVariable"];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_dual_variable(), target);
  }

  // repeated int64 subscripts = 9 [json_name = "subscripts"];
  {
    int byte_size = _impl_._subscripts_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          9, _internal_subscripts(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.EvaluatedConstraint)
  return target;
}

::size_t EvaluatedConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.EvaluatedConstraint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 used_decision_variable_ids = 4 [json_name = "usedDecisionVariableIds"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_used_decision_variable_ids())
    ;
    _impl_._used_decision_variable_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // map<string, string> parameters = 5 [json_name = "parameters"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // repeated int64 subscripts = 9 [json_name = "subscripts"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_subscripts())
    ;
    _impl_._subscripts_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 6 [json_name = "name"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string description = 7 [json_name = "description"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_description());
    }

  }
  // uint64 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // double evaluated_value = 3 [json_name = "evaluatedValue"];
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_evaluated_value = this->_internal_evaluated_value();
  ::uint64_t raw_evaluated_value;
  memcpy(&raw_evaluated_value, &tmp_evaluated_value, sizeof(tmp_evaluated_value));
  if (raw_evaluated_value != 0) {
    total_size += 9;
  }

  // optional double dual_variable = 8 [json_name = "dualVariable"];
  if (cached_has_bits & 0x00000004u) {
    total_size += 9;
  }

  // .ommx.v1.Equality equality = 2 [json_name = "equality"];
  if (this->_internal_equality() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_equality());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EvaluatedConstraint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EvaluatedConstraint*>(&to_msg);
  auto& from = static_cast<const EvaluatedConstraint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.EvaluatedConstraint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_used_decision_variable_ids()->MergeFrom(from._internal_used_decision_variable_ids());
  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_internal_mutable_subscripts()->MergeFrom(from._internal_subscripts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_evaluated_value = from._internal_evaluated_value();
  ::uint64_t raw_evaluated_value;
  memcpy(&raw_evaluated_value, &tmp_evaluated_value, sizeof(tmp_evaluated_value));
  if (raw_evaluated_value != 0) {
    _this->_impl_.evaluated_value_ = from._impl_.evaluated_value_;
  }
  if (cached_has_bits & 0x00000004u) {
    _this->_impl_.dual_variable_ = from._impl_.dual_variable_;
  }
  if (from._internal_equality() != 0) {
    _this->_impl_.equality_ = from._impl_.equality_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EvaluatedConstraint::CopyFrom(const EvaluatedConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.EvaluatedConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EvaluatedConstraint::IsInitialized() const {
  return true;
}

void EvaluatedConstraint::InternalSwap(EvaluatedConstraint* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.used_decision_variable_ids_.InternalSwap(&other->_impl_.used_decision_variable_ids_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.subscripts_.InternalSwap(&other->_impl_.subscripts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.equality_)
      + sizeof(EvaluatedConstraint::_impl_.equality_)
      - PROTOBUF_FIELD_OFFSET(EvaluatedConstraint, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata EvaluatedConstraint::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fconstraint_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fconstraint_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fconstraint_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace ommx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_ommx_2fv1_2fconstraint_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
