// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ommx/v1/quadratic.proto
// Protobuf C++ Version: 5.26.1

#include "ommx/v1/quadratic.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ommx {
namespace v1 {

inline constexpr Quadratic::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rows_{},
        _rows_cached_byte_size_{0},
        columns_{},
        _columns_cached_byte_size_{0},
        values_{},
        linear_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Quadratic::Quadratic(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QuadraticDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuadraticDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuadraticDefaultTypeInternal() {}
  union {
    Quadratic _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuadraticDefaultTypeInternal _Quadratic_default_instance_;
}  // namespace v1
}  // namespace ommx
static ::_pb::Metadata file_level_metadata_ommx_2fv1_2fquadratic_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ommx_2fv1_2fquadratic_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ommx_2fv1_2fquadratic_2eproto = nullptr;
const ::uint32_t
    TableStruct_ommx_2fv1_2fquadratic_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Quadratic, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Quadratic, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Quadratic, _impl_.rows_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Quadratic, _impl_.columns_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Quadratic, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::ommx::v1::Quadratic, _impl_.linear_),
        ~0u,
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::ommx::v1::Quadratic)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ommx::v1::_Quadratic_default_instance_._instance,
};
const char descriptor_table_protodef_ommx_2fv1_2fquadratic_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027ommx/v1/quadratic.proto\022\007ommx.v1\032\024ommx"
    "/v1/linear.proto\"\212\001\n\tQuadratic\022\022\n\004rows\030\001"
    " \003(\004R\004rows\022\030\n\007columns\030\002 \003(\004R\007columns\022\026\n\006"
    "values\030\003 \003(\001R\006values\022,\n\006linear\030\004 \001(\0132\017.o"
    "mmx.v1.LinearH\000R\006linear\210\001\001B\t\n\007_linearBZ\n"
    "\013com.ommx.v1B\016QuadraticProtoP\001\242\002\003OXX\252\002\007O"
    "mmx.V1\312\002\007Ommx\\V1\342\002\023Ommx\\V1\\GPBMetadata\352\002"
    "\010Ommx::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ommx_2fv1_2fquadratic_2eproto_deps[1] =
    {
        &::descriptor_table_ommx_2fv1_2flinear_2eproto,
};
static ::absl::once_flag descriptor_table_ommx_2fv1_2fquadratic_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ommx_2fv1_2fquadratic_2eproto = {
    false,
    false,
    297,
    descriptor_table_protodef_ommx_2fv1_2fquadratic_2eproto,
    "ommx/v1/quadratic.proto",
    &descriptor_table_ommx_2fv1_2fquadratic_2eproto_once,
    descriptor_table_ommx_2fv1_2fquadratic_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_ommx_2fv1_2fquadratic_2eproto::offsets,
    file_level_metadata_ommx_2fv1_2fquadratic_2eproto,
    file_level_enum_descriptors_ommx_2fv1_2fquadratic_2eproto,
    file_level_service_descriptors_ommx_2fv1_2fquadratic_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ommx_2fv1_2fquadratic_2eproto_getter() {
  return &descriptor_table_ommx_2fv1_2fquadratic_2eproto;
}
namespace ommx {
namespace v1 {
// ===================================================================

class Quadratic::_Internal {
 public:
  using HasBits = decltype(std::declval<Quadratic>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Quadratic, _impl_._has_bits_);
};

void Quadratic::clear_linear() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.linear_ != nullptr) _impl_.linear_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Quadratic::Quadratic(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ommx.v1.Quadratic)
}
inline PROTOBUF_NDEBUG_INLINE Quadratic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rows_{visibility, arena, from.rows_},
        _rows_cached_byte_size_{0},
        columns_{visibility, arena, from.columns_},
        _columns_cached_byte_size_{0},
        values_{visibility, arena, from.values_} {}

Quadratic::Quadratic(
    ::google::protobuf::Arena* arena,
    const Quadratic& from)
    : ::google::protobuf::Message(arena) {
  Quadratic* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.linear_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ommx::v1::Linear>(
                              arena, *from._impl_.linear_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ommx.v1.Quadratic)
}
inline PROTOBUF_NDEBUG_INLINE Quadratic::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rows_{visibility, arena},
        _rows_cached_byte_size_{0},
        columns_{visibility, arena},
        _columns_cached_byte_size_{0},
        values_{visibility, arena} {}

inline void Quadratic::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.linear_ = {};
}
Quadratic::~Quadratic() {
  // @@protoc_insertion_point(destructor:ommx.v1.Quadratic)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Quadratic::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.linear_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Quadratic::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Quadratic, _impl_._cached_size_),
              false,
          },
          &Quadratic::MergeImpl,
          &Quadratic::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Quadratic::Clear() {
// @@protoc_insertion_point(message_clear_start:ommx.v1.Quadratic)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rows_.Clear();
  _impl_.columns_.Clear();
  _impl_.values_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.linear_ != nullptr);
    _impl_.linear_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Quadratic::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> Quadratic::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Quadratic, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Quadratic_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ommx::v1::Quadratic>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .ommx.v1.Linear linear = 4 [json_name = "linear"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.linear_)}},
    // repeated uint64 rows = 1 [json_name = "rows"];
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.rows_)}},
    // repeated uint64 columns = 2 [json_name = "columns"];
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.columns_)}},
    // repeated double values = 3 [json_name = "values"];
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint64 rows = 1 [json_name = "rows"];
    {PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.rows_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated uint64 columns = 2 [json_name = "columns"];
    {PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.columns_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated double values = 3 [json_name = "values"];
    {PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.values_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // optional .ommx.v1.Linear linear = 4 [json_name = "linear"];
    {PROTOBUF_FIELD_OFFSET(Quadratic, _impl_.linear_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ommx::v1::Linear>()},
  }}, {{
  }},
};

::uint8_t* Quadratic::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ommx.v1.Quadratic)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint64 rows = 1 [json_name = "rows"];
  {
    int byte_size = _impl_._rows_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_rows(), byte_size, target);
    }
  }

  // repeated uint64 columns = 2 [json_name = "columns"];
  {
    int byte_size = _impl_._columns_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_columns(), byte_size, target);
    }
  }

  // repeated double values = 3 [json_name = "values"];
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_values(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ommx.v1.Linear linear = 4 [json_name = "linear"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.linear_, _impl_.linear_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ommx.v1.Quadratic)
  return target;
}

::size_t Quadratic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ommx.v1.Quadratic)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 rows = 1 [json_name = "rows"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_rows())
    ;
    _impl_._rows_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 columns = 2 [json_name = "columns"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_columns())
    ;
    _impl_._columns_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double values = 3 [json_name = "values"];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional .ommx.v1.Linear linear = 4 [json_name = "linear"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.linear_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Quadratic::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Quadratic*>(&to_msg);
  auto& from = static_cast<const Quadratic&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ommx.v1.Quadratic)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rows()->MergeFrom(from._internal_rows());
  _this->_internal_mutable_columns()->MergeFrom(from._internal_columns());
  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.linear_ != nullptr);
    if (_this->_impl_.linear_ == nullptr) {
      _this->_impl_.linear_ =
          ::google::protobuf::Message::CopyConstruct<::ommx::v1::Linear>(arena, *from._impl_.linear_);
    } else {
      _this->_impl_.linear_->MergeFrom(*from._impl_.linear_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quadratic::CopyFrom(const Quadratic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ommx.v1.Quadratic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Quadratic::IsInitialized() const {
  return true;
}

void Quadratic::InternalSwap(Quadratic* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rows_.InternalSwap(&other->_impl_.rows_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  swap(_impl_.linear_, other->_impl_.linear_);
}

::google::protobuf::Metadata Quadratic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_ommx_2fv1_2fquadratic_2eproto_getter,
                                   &descriptor_table_ommx_2fv1_2fquadratic_2eproto_once,
                                   file_level_metadata_ommx_2fv1_2fquadratic_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace ommx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_ommx_2fv1_2fquadratic_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
