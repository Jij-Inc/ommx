syntax = "proto3";

package ommx.v1;

import "ommx/v1/k_hot.proto";
import "ommx/v1/one_hot.proto";
import "ommx/v1/sos1.proto";

// A constraint hint is an additional inforomation to be used by solver to gain performance.
// They are derived from one-or-more constraints in the instance and typically contains information of special types of constraints (e.g. one-hot, SOS, ...).
message ConstraintHints {
  // **DEPRECATED**: This field is deprecated and will be removed in future versions. Use `k_hot_constraints` instead.
  //
  // One-hot constraint: e.g. `x_1 + ... + x_n = 1` for binary variables `x_1, ..., x_n`.
  repeated OneHot one_hot_constraints = 2 [deprecated = true];
  // SOS1 constraint: at most one of x_1, ..., x_n can be non-zero.
  repeated SOS1 sos1_constraints = 3;
  // K-hot constraints: map from k to a list of k-hot constraints, i.e.
  // `x_1 + ... + x_n = k` for binary variables `x_1, ..., x_n` and a natural number `k`.
  map<uint64, KHotList> k_hot_constraints = 4;
}

// A list of KHot constraints with the same k value.
message KHotList {
  repeated KHot constraints = 1;
}
