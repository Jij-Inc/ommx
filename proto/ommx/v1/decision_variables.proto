syntax = "proto3";

package ommx.v1;

// Upper and lower bound of the decision variable.
message Bound {
  // Lower bound of the decision variable.
  double lower = 1;
  // Upper bound of the decision variable.
  double upper = 2;
}

// Decison variable which mathematical programming solver will optimize.
// It must have its kind, i.e. binary, integer, real or others and unique identifier of 64-bit integer.
// It may have its name and subscripts which are used to identify in modeling tools.
message DecisionVariable {
  // Decision variable ID.
  //
  // - IDs are not required to be sequential.
  uint64 id = 1;

  // Kind of the decision variable
  enum Kind {
    KIND_UNSPECIFIED = 0;
    KIND_BINARY = 1;
    KIND_INTEGER = 2;
    KIND_REAL = 3;
  }

  // Kind of the decision variable
  Kind kind = 2;

  // Bound of the decision variable
  // If the bound is not specified, the decision variable is considered as unbounded.
  optional Bound bound = 3;

  // Human readable description of the decision variable.
  message Description {
    // Name of the decision variable.
    string name = 1;
    // The subscripts of a deicision variable which is defined as multi-dimensional array.
    // Empty list means that the decision variable is scalar
    repeated uint64 subscripts = 2;
  }

  // This is optional since the name and subscripts does not exist in general mathematical programming situation
  optional Description description = 4;
}
