syntax = "proto3";

package ommx.v1;

import "ommx/v1/constraint.proto";
import "ommx/v1/decision_variables.proto";

// A set of values of decision variables, without any evaluation, even the
// feasiblity of the solution.
message State {
  // The value of the solution for each variable ID.
  map<uint64, double> entries = 1;
}

enum Optimality {
  // The solver cannot determine whether the solution is optimal. Most of heuristic solvers should use this value.
  OPTIMALITY_UNSPECIFIED = 0;
  // The solver has determined that the solution is optimal.
  OPTIMALITY_OPTIMAL = 1;
  // The solver has determined that the solution is not optimal.
  OPTIMALITY_NOT_OPTIMAL = 2;
}

// Solution with evaluated objective and constraints
message Solution {
  State state = 1;
  double objective = 2;

  repeated DecisionVariable decision_variables = 3;
  repeated EvaluatedConstraint evaluated_constraints = 4;

  // Whether the solution is feasible
  bool feasible = 5;

  // The optimality of the solution.
  Optimality optimality = 6;
}

// The solver proved that the problem is infeasible.
message Infeasible {
  // TODO: Add more information about the infeasibility.
}

// The solver proved that the problem is unbounded.
message Unbounded {
  // TODO: Add more information about the unboundedness.
}

message Result {
  oneof result {
    // Error information by the solver which cannot be expressed by other messages.
    // This string should be human-readable.
    string error = 1;

    // Some feasible or infeasible solution for the problem is found. Most of heuristic solvers should use this value.
    Solution solution = 2;

    // The problem is infeasible.
    Infeasible infeasible = 3;

    // The problem is unbounded.
    Unbounded unbounded = 4;
    // TODO: Add more cases
  }
}
