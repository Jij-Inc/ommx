class Descriptor:
    @property
    def digest(self) -> str: ...
    @property
    def size(self) -> int: ...
    @property
    def annotations(self) -> dict[str, str]: ...

class Artifact:
    @staticmethod
    def from_oci_archive(path: str) -> Artifact: ...
    @property
    def instance_descriptors(self) -> list[Descriptor]: ...

def evaluate_function(evaluated: bytes, state: bytes) -> tuple[float, set[int]]: ...
def evaluate_linear(evaluated: bytes, state: bytes) -> tuple[float, set[int]]: ...
def evaluate_quadratic(evaluated: bytes, state: bytes) -> tuple[float, set[int]]: ...
def evaluate_polynomial(evaluated: bytes, state: bytes) -> tuple[float, set[int]]: ...

def evaluate_constraint(evaluated: bytes, state: bytes) -> tuple[bytes, set[int]]: ...
def evaluate_instance(evaluated: bytes, state: bytes) -> tuple[bytes, set[int]]: ...
