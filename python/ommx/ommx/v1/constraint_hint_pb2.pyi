"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import ommx.v1.one_hot_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ConstraintHint(google.protobuf.message.Message):
    """A constraint hint is an additional inforomation to be used by solver to gain performance.
    They are derived from one-or-more constraints in the instance and typically contains information of special types of constraints (e.g. one-hot, SOS, ...).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONSTRAINT_IDS_FIELD_NUMBER: builtins.int
    ONE_HOT_FIELD_NUMBER: builtins.int
    @property
    def constraint_ids(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """The list of constraint IDs involved in the constraint."""

    @property
    def one_hot(self) -> ommx.v1.one_hot_pb2.OneHot:
        """One-hot constraint: e.g. `x_1 + ... + x_n = 1` for binary variables `x_1, ..., x_n`."""

    def __init__(
        self,
        *,
        constraint_ids: collections.abc.Iterable[builtins.int] | None = ...,
        one_hot: ommx.v1.one_hot_pb2.OneHot | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "constraint_type", b"constraint_type", "one_hot", b"one_hot"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "constraint_ids",
            b"constraint_ids",
            "constraint_type",
            b"constraint_type",
            "one_hot",
            b"one_hot",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["constraint_type", b"constraint_type"]
    ) -> typing.Literal["one_hot"] | None: ...

global___ConstraintHint = ConstraintHint
