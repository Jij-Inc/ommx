name: Release Python SDK

on:
  push:
    tags:
      - python-*
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    strategy:
      matrix:
        target: [x86_64, aarch64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --out dist --interpreter 3.9 3.13t
          target: ${{ matrix.target }}
          working-directory: ./python/ommx
          manylinux: manylinux_2_28

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.target }}
          path: ./python/ommx/dist
          retention-days: 30

  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --out dist --interpreter 3.9 3.13t
          working-directory: ./python/ommx

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: ./python/ommx/dist
          retention-days: 30

  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      # Windows requires local Python
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.13t
          cache: "pip"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --out dist --interpreter 3.9 3.13t
          working-directory: ./python/ommx

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: ./python/ommx/dist
          retention-days: 30

  adapters:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [python-mip, pyscipopt, openjij, highs]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment

      - name: Build wheel
        run: uv build --out-dir ./dist --sdist ./python/ommx-${{ matrix.name }}-adapter

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-adapter
          path: ./dist/
          retention-days: 30

  check-wheel:
    runs-on: ubuntu-latest
    needs: [linux, macos, windows, adapters]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Test Environment
        uses: ./.github/actions/setup-test-environment

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist
          pattern: "*"
          merge-multiple: true

      - name: Check wheel
        run: uvx twine check --strict dist/*

  publish:
    if: startsWith(github.ref, 'refs/tags/python-')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: [linux, macos, windows, adapters, check-wheel]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist
          pattern: "*"
          merge-multiple: true

      - name: Upload wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  next_version:
    # Runs only if new tag is pushed
    if: startsWith(github.ref, 'refs/tags/python-')
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment
        with:
          python-version: "3.9"

      - name: Bump version
        run: |
          echo "NEW_VERSION=$(uv run python/set-version.py)" >> $GITHUB_ENV
          task python:sync

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_PROVIDER_OMMX_APP_ID }}
          private-key: ${{ secrets.TOKEN_PROVIDER_OMMX_PRIVATE_KEY }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.app-token.outputs.token }}
          title: "Start developing OMMX Python SDK ${{ env.NEW_VERSION }}"
          branch: "python-version-update/${{ env.NEW_VERSION }}"
          base: "main"

  update_docs_deps:
    # Runs only if new tag is pushed
    if: startsWith(github.ref, 'refs/tags/python-')
    runs-on: ubuntu-latest
    needs: publish
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment
        with:
          python-version: "3.9"

      - name: Extract released version from tag
        run: |
          echo "RELEASED_VERSION=${GITHUB_REF#refs/tags/python-}" >> $GITHUB_ENV

      - name: Update docs dependencies
        run: |
          task python:update-docs-deps -- ${RELEASED_VERSION}
          task pip_compile

      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_PROVIDER_OMMX_APP_ID }}
          private-key: ${{ secrets.TOKEN_PROVIDER_OMMX_PRIVATE_KEY }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.app-token.outputs.token }}
          title: "Update docs dependencies to OMMX ${{ env.RELEASED_VERSION }}"
          branch: "docs-deps-update/${{ env.RELEASED_VERSION }}"
          base: "main"
          body: |
            Update docs/pyproject.toml and requirements.txt to use released OMMX ${{ env.RELEASED_VERSION }}

            This PR is automatically created after publishing OMMX Python SDK ${{ env.RELEASED_VERSION }} to PyPI.
