name: Publish OMMX on Pypi

on:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build Wheels ${{ matrix.os }} ${{ matrix.arch }}.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - upload_id: 1
            os: ubuntu-latest
            arch: x86_64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_X86_64_IMAGE: 'quay.io/pypa/manylinux_2_28_x86_64:latest'
            
          - upload_id: 2
            os: ubuntu-latest
            arch: x86_64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_X86_64_IMAGE: 'quay.io/pypa/manylinux2014_x86_64:latest'
              
          - upload_id: 3
            os: ubuntu-latest
            arch: aarch64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_AARCH64_IMAGE: 'quay.io/pypa/manylinux_2_28_aarch64:latest'
            
          - upload_id: 4
            os: ubuntu-latest
            arch: aarch64
            CIBW_PLATFORM: linux
            CIBW_MANYLINUX_AARCH64_IMAGE: 'quay.io/pypa/manylinux2014_aarch64:latest'
            
          - upload_id: 5
            os: macos-latest
            arch: x86_64
            CIBW_PLATFORM: macos
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='12.0'"

          - upload_id: 6
            os: macos-latest
            arch: x86_64
            CIBW_PLATFORM: macos
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='11.0'"
            
          - upload_id: 7
            os: macos-latest
            arch: x86_64
            CIBW_PLATFORM: macos  
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='10.16'"
            
          - upload_id: 8
            os: macos-latest
            arch: arm64
            CIBW_PLATFORM: macos
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='12.0'"

          - upload_id: 9
            os: macos-latest
            arch: arm64
            CIBW_PLATFORM: macos
            CIBW_ENVIRONMENT: "MACOSX_DEPLOYMENT_TARGET='11.0'"
            
          - upload_id: 10
            os: windows-latest
            arch: AMD64
            CIBW_PLATFORM: windows
            
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.9'

      - name: Set up QEMU
        if: ${{ runner.os == 'Linux'  && matrix.arch == 'aarch64'}}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        if: runner.os == 'Linux'
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_PLATFORM: ${{ matrix.CIBW_PLATFORM }}
          CIBW_ENVIRONMENT: ${{ matrix.CIBW_ENVIRONMENT }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.CIBW_MANYLINUX_X86_64_IMAGE }}
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.CIBW_MANYLINUX_AARCH64_IMAGE }}
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"

      - uses: actions/upload-artifact@v4
        with:
          name: WHEEL-${{ matrix.upload_id }}
          path: ./wheelhouse/*.whl
          retention-days: 30

      - name: Show 
        run: du -a ./wheelhouse

  
  upload_pypi:
    needs: [build_wheels]
    if: ${{ github.event_name != 'workflow_dispatch' }}
    name: Publish to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          pattern: WHEEL-*
          merge-multiple: true
