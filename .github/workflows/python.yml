name: Python

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  protogen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment

      - name: Regenerate python bindings
        run: task proto:python

      - name: Check updated
        run: |
          git add -N python/ommx/ommx/  # To check newly generated files
          git diff --exit-code

  stub-gen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment

      - name: Regenerate stub file
        run: task python:stubgen

      - name: Check updated
        run: |
          git diff --exit-code python/ommx/ommx/_ommx_rust.pyi

  build-wheel:
    name: Build Wheel and run Pyright
    runs-on: ubuntu-latest
    env:
      python-version: 3.12
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment
        with:
          python-version: ${{ env.python-version }}
      - name: Build ommx wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --out wheels -m python/ommx/Cargo.toml
      - name: Install wheel
        run: |
          uv pip install wheels/*.whl
      # We cannot run pyright in the test job,
      # because we need to nuke python/ommx/ommx
      # to get `pytest` working.
      - name: Run pyright
        run: task python:ommx:pyright
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheels

  # Test a single wheel with multiple python versions
  test:
    runs-on: ubuntu-latest
    needs: build-wheel
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.13t"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: wheels
      - name: Override `ommx' in pyproject.toml
        run: |
          uv run ci-scripts/override-ommx-with-wheel.py
          # NOTE: ommx/ommx confuses pytest so we must remove them as well
          rm -rf python/ommx/*.toml python/ommx/ommx
      - name: Install pytest-github-actions-annotate-failures
        run: |
          uv add --dev pytest-github-actions-annotate-failures
      - name: Install deps
        run: task python:sync
      - name: Test
        run: task python:test-ci

      - name: Run notebooks
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: |
          uv run jupyter nbconvert --to notebook --execute notebooks/*.ipynb
        env:
          OMMX_BASIC_AUTH_DOMAIN: ghcr.io
          OMMX_BASIC_AUTH_USERNAME: ${{ github.actor }}
          OMMX_BASIC_AUTH_PASSWORD: ${{ github.token }}

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-test-environment

      - name: Format
        run: ruff format --check python

      - name: Lint
        run: ruff check python
